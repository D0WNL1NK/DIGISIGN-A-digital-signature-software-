package home.send_file_interface;

import java.io.*;
import java.net.*;
import java.security.*;
import java.sql.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author aaryan
 */
public class Send_file_interface extends javax.swing.JFrame {

    /**
     * Creates new form Send_file_interface
     */
    public Send_file_interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        send_file_interface_title = new javax.swing.JLabel();
        signature_generate_public_key_button = new javax.swing.JButton();
        Send_file_button = new javax.swing.JButton();
        search_user_button = new javax.swing.JButton();
        userid_input_field = new javax.swing.JTextField();
        ip_label = new javax.swing.JLabel();
        return_ip_label = new javax.swing.JLabel();
        send_file_interface_background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        send_file_interface_title.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        send_file_interface_title.setForeground(new java.awt.Color(21, 223, 111));
        send_file_interface_title.setText("Send your file with a digital signature");
        getContentPane().add(send_file_interface_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 740, 100));

        signature_generate_public_key_button.setBackground(new java.awt.Color(49, 48, 55));
        signature_generate_public_key_button.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        signature_generate_public_key_button.setForeground(new java.awt.Color(32, 179, 228));
        signature_generate_public_key_button.setText("Generate Signature and Public Key");
        signature_generate_public_key_button.setToolTipText("Click to send files");
        signature_generate_public_key_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signature_generate_public_key_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(signature_generate_public_key_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 400, 60));

        Send_file_button.setBackground(new java.awt.Color(49, 48, 55));
        Send_file_button.setFont(new java.awt.Font("Waree", 1, 24)); // NOI18N
        Send_file_button.setForeground(new java.awt.Color(32, 179, 228));
        Send_file_button.setText("Send File");
        Send_file_button.setToolTipText("Click to send files");
        Send_file_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Send_file_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(Send_file_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 210, 60));

        search_user_button.setBackground(new java.awt.Color(49, 48, 55));
        search_user_button.setFont(new java.awt.Font("Waree", 1, 18)); // NOI18N
        search_user_button.setForeground(new java.awt.Color(32, 179, 228));
        search_user_button.setText("Search User");
        search_user_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_user_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(search_user_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 190, 50));

        userid_input_field.setBackground(new java.awt.Color(0,0,0,64));
        userid_input_field.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        userid_input_field.setForeground(new java.awt.Color(234, 111, 111));
        userid_input_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userid_input_fieldActionPerformed(evt);
            }
        });
        getContentPane().add(userid_input_field, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 320, 40));

        ip_label.setFont(new java.awt.Font("Waree", 0, 18)); // NOI18N
        ip_label.setForeground(new java.awt.Color(32, 179, 228));
        getContentPane().add(ip_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 310, 40));

        return_ip_label.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        return_ip_label.setForeground(new java.awt.Color(234, 111, 111));
        getContentPane().add(return_ip_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 240, 310, 40));

        send_file_interface_background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/send_file_interface_background.jpg"))); // NOI18N
        getContentPane().add(send_file_interface_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signature_generate_public_key_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signature_generate_public_key_buttonActionPerformed
        try {
            // TODO add your handling code here:
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            String filename = f.getName();
            String filepath = f.getAbsolutePath();

            System.out.println(filepath);
            KeyPairGenerator keyGen = KeyPairGenerator.getInstance("DSA", "SUN");
            SecureRandom random = SecureRandom.getInstance("SHA1PRNG", "SUN");

            keyGen.initialize(1024, random);

            KeyPair pair = keyGen.generateKeyPair();
            PrivateKey priv = pair.getPrivate();
            PublicKey pub = pair.getPublic();



            Signature dsa = Signature.getInstance("SHA1withDSA", "SUN");

            dsa.initSign(priv);



            FileInputStream fis = new FileInputStream(filepath);
            BufferedInputStream bufin = new BufferedInputStream(fis);
            byte[] buffer = new byte[1024];
            int len;
            while (bufin.available() != 0) {
                try {
                    len = bufin.read(buffer);
                    dsa.update(buffer, 0, len);
                } catch (SignatureException ex) {
                    Logger.getLogger(Send_file_interface.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Send_file_interface.class.getName()).log(Level.SEVERE, null, ex);
                }
            };

            bufin.close();



            byte[] realSig = dsa.sign();


            String dig_sig = filename + " digital_signature";
            FileOutputStream sigfos = new FileOutputStream(dig_sig);
            sigfos.write(realSig);
            System.out.println("Digital Signature Successfully Generated!");
            sigfos.close();


            String pub_key = filename + " public_key";
            byte[] key = pub.getEncoded();
            FileOutputStream keyfos = new FileOutputStream(pub_key);
            System.out.println("Public Key Successfully Generated!");
            keyfos.write(key);
            JOptionPane.showMessageDialog(null,"Digital Signature and Public Key Successfully Generated!");

            keyfos.close();
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Send_file_interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchProviderException ex) {
            Logger.getLogger(Send_file_interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Send_file_interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Send_file_interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SignatureException ex) {
            Logger.getLogger(Send_file_interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidKeyException ex) {
            Logger.getLogger(Send_file_interface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_signature_generate_public_key_buttonActionPerformed

    private void Send_file_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Send_file_buttonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            JFileChooser chooser = new JFileChooser();
            chooser.setDialogTitle("Select File");
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            String filepath = f.getAbsolutePath();
            String filename = f.getName();

            Socket socket = null;
            String host = return_ip_label.getText();

            socket = new Socket(host, 4444);
            DataOutputStream dout = new DataOutputStream(socket.getOutputStream());
            dout.writeUTF(filename);
            dout.flush();

            File file = new File(filepath);

            byte[] bytes = new byte[16 * 1024];
            InputStream in = new FileInputStream(file);
            OutputStream out = socket.getOutputStream();

            int count;
            while ((count = in.read(bytes)) > 0) {
                out.write(bytes, 0, count);
            }
        	JOptionPane.showMessageDialog(null,"File Successfully Sent!");

            out.close();
            in.close();
            socket.close();
        } catch (IOException ex) {
        	JOptionPane.showMessageDialog(null,"File Wasn't Sent!");

            Logger.getLogger(Send_file_interface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Send_file_buttonActionPerformed

    private void search_user_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_user_buttonActionPerformed
        try {
            // TODO add your handling code here:
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/login","root", "echostorme!@#");
            Statement stmt = con.createStatement();
            String a = userid_input_field.getText();
            ResultSet rs = null;
            try {
                rs = stmt.executeQuery("select * from user_login where uid =" + '"' + a + '"');
            } catch (SQLException ex) {
                Logger.getLogger(Send_file_interface.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (!rs.isBeforeFirst() ) {
                JOptionPane.showMessageDialog(null,"No Such User Present!");
            }
            else
            {
                while(rs.next())
                {
                    return_ip_label.setText(rs.getString(3));
                    ip_label.setText("The ip of the user is");
                }
                con.close();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Send_file_interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Send_file_interface.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_search_user_buttonActionPerformed

    private void userid_input_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userid_input_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userid_input_fieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Send_file_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Send_file_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Send_file_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Send_file_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Send_file_interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Send_file_button;
    private javax.swing.JLabel ip_label;
    private javax.swing.JLabel return_ip_label;
    private javax.swing.JButton search_user_button;
    private javax.swing.JLabel send_file_interface_background;
    private javax.swing.JLabel send_file_interface_title;
    private javax.swing.JButton signature_generate_public_key_button;
    private javax.swing.JTextField userid_input_field;
    // End of variables declaration//GEN-END:variables
}
