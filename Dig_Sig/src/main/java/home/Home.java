package home;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author aaryan
 */
import home.send_file_interface.Send_file_interface;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.KeyFactory;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.PublicKey;
import java.security.Signature;
import java.security.SignatureException;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.X509EncodedKeySpec;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Receive_button = new javax.swing.JButton();
        Sender_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Receive_button.setBackground(new java.awt.Color(60, 66, 62));
        Receive_button.setFont(new java.awt.Font("FreeSans", 1, 18)); // NOI18N
        Receive_button.setForeground(new java.awt.Color(70, 254, 134));
        Receive_button.setText("Receiver");
        Receive_button.setActionCommand("");
        Receive_button.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(210, 151, 151), new java.awt.Color(48, 231, 49), null, null));
        Receive_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Receive_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(Receive_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 490, 220, 50));

        Sender_button.setBackground(new java.awt.Color(60, 66, 62));
        Sender_button.setFont(new java.awt.Font("FreeSans", 1, 18)); // NOI18N
        Sender_button.setForeground(new java.awt.Color(70, 254, 134));
        Sender_button.setText("Sender");
        Sender_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sender_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(Sender_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 260, 220, 50));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(249, 255, 66));
        jLabel1.setText("Digital Signature Project, Welcome User!");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 130));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(121, 10, 151));
        jLabel2.setText("If you want to check received files then click on ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, 490, 110));

        jLabel3.setBackground(new java.awt.Color(203, 203, 10));
        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(27, 181, 1));
        jLabel3.setText("You currently have two options.");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 790, 50));

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(121, 10, 151));
        jLabel6.setText("If you want to send files then click on ");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 430, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home_header.jpg"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Receive_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Receive_buttonActionPerformed

        try {                                               
            
            // TODO add your handling code here:
            JFileChooser chooser = new JFileChooser();
            chooser.setDialogTitle("Select Public Key");
            chooser.showOpenDialog(null);
            
            File f;
            f = chooser.getSelectedFile();
            String filepath = f.getAbsolutePath();
            
            FileInputStream keyfis = null;
            try {
                keyfis = new FileInputStream(filepath);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            byte[] encKey = null;
            try {
                encKey = new byte[keyfis.available()];
            } catch (IOException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            keyfis.read(encKey);
            
            keyfis.close();
            
            X509EncodedKeySpec pubKeySpec = new X509EncodedKeySpec(encKey);
            
            KeyFactory keyFactory = null;
            try {
                keyFactory = KeyFactory.getInstance("DSA", "SUN");
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchProviderException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            PublicKey pubKey = null;
            try {
                pubKey = keyFactory.generatePublic(pubKeySpec);
            } catch (InvalidKeySpecException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            JFileChooser chooser1 = new JFileChooser();
            chooser1.setDialogTitle("Select Digital Signature");
            chooser1.showOpenDialog(null);
            
            File f1;
            f1 = chooser1.getSelectedFile();
            String filepath1 = f1.getAbsolutePath();
            
            
            FileInputStream sigfis;
            sigfis = new FileInputStream(filepath1);
            byte[] sigToVerify = new byte[sigfis.available()];
            sigfis.read(sigToVerify );
            
            sigfis.close();
            
            
            Signature sig;
            sig = Signature.getInstance("SHA1withDSA", "SUN");
            try {
                sig.initVerify(pubKey);
            } catch (InvalidKeyException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            JFileChooser chooser2 = new JFileChooser();
            chooser2.setDialogTitle("Select File");
            chooser2.showOpenDialog(null);
            
            File f2;
            f2 = chooser2.getSelectedFile();
            String filepath2 = f2.getAbsolutePath();
            
            
            FileInputStream datafis;
            datafis = new FileInputStream(filepath2);
            BufferedInputStream bufin = new BufferedInputStream(datafis);
            
            byte[] buffer = new byte[1024];
            int len;
            while (bufin.available() != 0) {
                len = bufin.read(buffer);
                try {
                    sig.update(buffer, 0, len);
                } catch (SignatureException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            };
            
            bufin.close();
            
            
            boolean verifies;
            verifies = sig.verify(sigToVerify);
            if (verifies == true)
            {
                JOptionPane.showMessageDialog(null,"Signature Successfully Verified!");
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Signature Doesn't Match");
            }
        } catch (IOException | NoSuchAlgorithmException | NoSuchProviderException | SignatureException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Receive_buttonActionPerformed

    private void Sender_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sender_buttonActionPerformed
        // TODO add your handling code here:
        Send_file_interface sfi = new Send_file_interface();
    	sfi.setVisible(true);
    }//GEN-LAST:event_Sender_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Receive_button;
    private javax.swing.JButton Sender_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
